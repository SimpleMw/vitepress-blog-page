import{_ as p,C as t,o as l,c as a,H as i,w as o,Q as s,k as c,a as _}from"./chunks/framework.8153c8a6.js";const g=JSON.parse('{"title":"JVM","description":"","frontmatter":{"title":"JVM","date":"2022-04-09T13:25:25.000Z","category":"java基础相关","tag":"JVM","top_img":false},"headers":[],"relativePath":"guide/javabasic/jvm.md","filePath":"guide/javabasic/jvm.md"}'),n={name:"guide/javabasic/jvm.md"},r=s("<ul><li><p>堆</p><p>存对象</p></li><li><p>线程栈</p><p>每有一个线程就会从线程栈中划分一块区域</p><ul><li><p>栈帧</p><p>每执行一个方法就会在线程栈中分配一块区域</p><ul><li><p>操作数栈</p><p>将临时数据做加减乘除的操作的地方</p></li><li><p>局部变量(指针指向堆)</p><p>存储临时数据(变量)</p></li><li><p>动态链接</p><p>通过动态链接去链接到方法区，拿到方法区的方法</p></li><li><p>方法出口</p><p>链接到上层调用</p></li></ul></li></ul></li><li><p>方法区(元空间)（指针指向堆）</p><ul><li>常量</li><li>静态变量</li><li>类信息</li></ul></li><li><p>程序计数器</p><p>用于记录执行当前所到的步骤(cpu的执行权限被抢走时记录当前程序的执行步骤，用于抢回权限后接着执行)</p></li><li><p>本地方法栈</p><p>native修饰的方法执行的内存空间(c、c++实现的方法)</p></li></ul>",1),d=c("p",null,"JVM调优的目的是减少FULL GC，因为在FULL GC的时候会STW(stop the world)，停掉当前运行的线程",-1);function u(m,f,v,V,T,h){const e=t("font");return l(),a("div",null,[r,i(e,{color:"red"},{default:o(()=>[_("注:")]),_:1}),d])}const C=p(n,[["render",u]]);export{g as __pageData,C as default};
