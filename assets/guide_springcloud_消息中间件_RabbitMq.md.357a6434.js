import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.8153c8a6.js";const A=JSON.parse('{"title":"RabbitMQ","description":"","frontmatter":{"title":"RabbitMQ","date":"2022-01-26T08:40:27.000Z"},"headers":[],"relativePath":"guide/springcloud/消息中间件/RabbitMq.md","filePath":"guide/springcloud/消息中间件/RabbitMq.md"}'),p={name:"guide/springcloud/消息中间件/RabbitMq.md"},o=l(`<p>场景：需要基于队列实现消息传递，保证消息不被丢弃和稳定</p><h5 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h5><h6 id="安装erlang" tabindex="-1">安装erlang <a class="header-anchor" href="#安装erlang" aria-label="Permalink to &quot;安装erlang&quot;">​</a></h6><ul><li>安装</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-y</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">epel-release</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span><span style="color:#24292E;"> </span><span style="color:#032F62;">epel-release</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">rpm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Uvh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">erlang-solutions-1.0-1.noarch.rpm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">rpm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Uvh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">erlang-solutions-1.0-1.noarch.rpm</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-y</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">erlang</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span><span style="color:#24292E;"> </span><span style="color:#032F62;">erlang</span></span></code></pre></div><ul><li>验证安装成功</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">erl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">erl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-version</span></span></code></pre></div><h6 id="安装rabitmq" tabindex="-1">安装RabitMq <a class="header-anchor" href="#安装rabitmq" aria-label="Permalink to &quot;安装RabitMq&quot;">​</a></h6><ul><li>官网下载 RPM包，上传到服务器上</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">rpm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Uvh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server-3.9.12-1.el7.noarch.rpm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">rpm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Uvh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server-3.9.12-1.el7.noarch.rpm</span></span></code></pre></div><ul><li>启动</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span></code></pre></div><ul><li>查看状态</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span></code></pre></div><ul><li>启动控制台</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rabbitmq-plugins enable rabbitmq_management</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rabbitmq-plugins enable rabbitmq_management</span></span></code></pre></div><ul><li>添加用户名和密码以及设置权限</li></ul><p><a href="https://www.cnblogs.com/shangpolu/p/8275126.html" target="_blank" rel="noreferrer">参考</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rabbitmqctl add_user admin 123456</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl set_user_tags admin administrator</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl set_permissions -p / admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rabbitmqctl add_user admin 123456</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl set_user_tags admin administrator</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl set_permissions -p / admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span></span></code></pre></div><ul><li>访问</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">http://192.168.226.128:15672</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">http://192.168.226.128:15672</span></span></code></pre></div><h5 id="简单实现" tabindex="-1">简单实现 <a class="header-anchor" href="#简单实现" aria-label="Permalink to &quot;简单实现&quot;">​</a></h5><ul><li>依赖</li></ul><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-amqp&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-amqp&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h6 id="生产者" tabindex="-1">生产者 <a class="header-anchor" href="#生产者" aria-label="Permalink to &quot;生产者&quot;">​</a></h6><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> com.rabbitmq.client.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.nio.charset.StandardCharsets;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.Scanner;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.TimeoutException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">provider</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//队列名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String QUEUE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myQueue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//交换机名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String EXCHANGE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myDirectExchange&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//设置一个路由键</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String ROUTE_KEY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;routeKey&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//队列是否持久化</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> QUEUE_PERSISTENCE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//是否共享消息</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> MESSAGE_SHART </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//是否自动删除</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> AUTO_DELETE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> IOException, TimeoutException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ConnectionFactory connectionFactory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConnectionFactory</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setHost</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;192.168.226.128&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setPort</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5672</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setUsername</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;admin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setPassword</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//创建连接</span></span>
<span class="line"><span style="color:#E1E4E8;">        Connection connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connectionFactory.</span><span style="color:#B392F0;">newConnection</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//创建信道</span></span>
<span class="line"><span style="color:#E1E4E8;">        Channel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connection.</span><span style="color:#B392F0;">createChannel</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道绑定队列和配置参数</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueDeclare</span><span style="color:#E1E4E8;">(QUEUE_NAME,QUEUE_PERSISTENCE,MESSAGE_SHART,AUTO_DELETE,</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道开启发布确认</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">confirmSelect</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">         * 信道绑定交换机 交换机类型</span></span>
<span class="line"><span style="color:#6A737D;">         * 1.direct 严格校验routeKey,只有设置相同的routeKey的才能收到</span></span>
<span class="line"><span style="color:#6A737D;">         * 2.fanout 所有连接该交换机的队列都能收到</span></span>
<span class="line"><span style="color:#6A737D;">         * 3.topic 模糊匹配，关键词中间以点隔开，#号匹配1个或多个字，*匹配一个关键字</span></span>
<span class="line"><span style="color:#6A737D;">         * 4.headers 根据消息中的headers属性匹配</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">exchangeDeclare</span><span style="color:#E1E4E8;">(EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道绑定交换机和队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueBind</span><span style="color:#E1E4E8;">(QUEUE_NAME,EXCHANGE_NAME,ROUTE_KEY,</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置发送成功与否的监听器</span></span>
<span class="line"><span style="color:#E1E4E8;">        ConfirmCallback ackCallback </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (deliveryTag, multiple) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//deliveryTag 消息序号，multiple是否批量确认</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">deliveryTag </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]发送成功&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置失败回调函数</span></span>
<span class="line"><span style="color:#E1E4E8;">        ConfirmCallback nackCallback </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (deliveryTag, multiple) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//deliveryTag 消息序号，multiple是否批量确认</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">deliveryTag </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]发送失败&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">addConfirmListener</span><span style="color:#E1E4E8;">(ackCallback, nackCallback);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        Scanner scanner </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Scanner</span><span style="color:#E1E4E8;">(System.in);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(scanner.</span><span style="color:#B392F0;">hasNextLine</span><span style="color:#E1E4E8;">()){</span></span>
<span class="line"><span style="color:#E1E4E8;">            String str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scanner.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * 发送消息</span></span>
<span class="line"><span style="color:#6A737D;">             * 1.交换机</span></span>
<span class="line"><span style="color:#6A737D;">             * 2.队列</span></span>
<span class="line"><span style="color:#6A737D;">             * 3.消息的属性 MessageProperties.PERSISTENT_TEXT_PLAIN 消息持久化</span></span>
<span class="line"><span style="color:#6A737D;">             * 4.消息体</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//设置超时时间</span></span>
<span class="line"><span style="color:#E1E4E8;">            AMQP.BasicProperties basicProperties </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> AMQP.</span><span style="color:#B392F0;">BasicProperties</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">builder</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">expiration</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;10000&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            channel.</span><span style="color:#B392F0;">basicPublish</span><span style="color:#E1E4E8;">(EXCHANGE_NAME,ROUTE_KEY,basicProperties,str.</span><span style="color:#B392F0;">getBytes</span><span style="color:#E1E4E8;">(StandardCharsets.UTF_8));</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//调用方法确认</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//通过waitForConfirms可用于判断是否发送成功</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(channel.</span><span style="color:#B392F0;">waitForConfirms</span><span style="color:#E1E4E8;">()){</span></span>
<span class="line"><span style="color:#E1E4E8;">                    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消息发送成功:[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">str</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> com.rabbitmq.client.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.nio.charset.StandardCharsets;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Scanner;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.TimeoutException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">provider</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//队列名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String QUEUE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myQueue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//交换机名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String EXCHANGE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myDirectExchange&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//设置一个路由键</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ROUTE_KEY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;routeKey&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//队列是否持久化</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> QUEUE_PERSISTENCE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//是否共享消息</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> MESSAGE_SHART </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//是否自动删除</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> AUTO_DELETE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException, TimeoutException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">        ConnectionFactory connectionFactory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConnectionFactory</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setHost</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;192.168.226.128&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setPort</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5672</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setUsername</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setPassword</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建连接</span></span>
<span class="line"><span style="color:#24292E;">        Connection connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connectionFactory.</span><span style="color:#6F42C1;">newConnection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建信道</span></span>
<span class="line"><span style="color:#24292E;">        Channel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connection.</span><span style="color:#6F42C1;">createChannel</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道绑定队列和配置参数</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueDeclare</span><span style="color:#24292E;">(QUEUE_NAME,QUEUE_PERSISTENCE,MESSAGE_SHART,AUTO_DELETE,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道开启发布确认</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">confirmSelect</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">         * 信道绑定交换机 交换机类型</span></span>
<span class="line"><span style="color:#6A737D;">         * 1.direct 严格校验routeKey,只有设置相同的routeKey的才能收到</span></span>
<span class="line"><span style="color:#6A737D;">         * 2.fanout 所有连接该交换机的队列都能收到</span></span>
<span class="line"><span style="color:#6A737D;">         * 3.topic 模糊匹配，关键词中间以点隔开，#号匹配1个或多个字，*匹配一个关键字</span></span>
<span class="line"><span style="color:#6A737D;">         * 4.headers 根据消息中的headers属性匹配</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">exchangeDeclare</span><span style="color:#24292E;">(EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道绑定交换机和队列</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueBind</span><span style="color:#24292E;">(QUEUE_NAME,EXCHANGE_NAME,ROUTE_KEY,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置发送成功与否的监听器</span></span>
<span class="line"><span style="color:#24292E;">        ConfirmCallback ackCallback </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (deliveryTag, multiple) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//deliveryTag 消息序号，multiple是否批量确认</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">deliveryTag </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]发送成功&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置失败回调函数</span></span>
<span class="line"><span style="color:#24292E;">        ConfirmCallback nackCallback </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (deliveryTag, multiple) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//deliveryTag 消息序号，multiple是否批量确认</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">deliveryTag </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]发送失败&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">addConfirmListener</span><span style="color:#24292E;">(ackCallback, nackCallback);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(scanner.</span><span style="color:#6F42C1;">hasNextLine</span><span style="color:#24292E;">()){</span></span>
<span class="line"><span style="color:#24292E;">            String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">             * 发送消息</span></span>
<span class="line"><span style="color:#6A737D;">             * 1.交换机</span></span>
<span class="line"><span style="color:#6A737D;">             * 2.队列</span></span>
<span class="line"><span style="color:#6A737D;">             * 3.消息的属性 MessageProperties.PERSISTENT_TEXT_PLAIN 消息持久化</span></span>
<span class="line"><span style="color:#6A737D;">             * 4.消息体</span></span>
<span class="line"><span style="color:#6A737D;">             */</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//设置超时时间</span></span>
<span class="line"><span style="color:#24292E;">            AMQP.BasicProperties basicProperties </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> AMQP.</span><span style="color:#6F42C1;">BasicProperties</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">builder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">expiration</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;10000&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            channel.</span><span style="color:#6F42C1;">basicPublish</span><span style="color:#24292E;">(EXCHANGE_NAME,ROUTE_KEY,basicProperties,str.</span><span style="color:#6F42C1;">getBytes</span><span style="color:#24292E;">(StandardCharsets.UTF_8));</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//调用方法确认</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//通过waitForConfirms可用于判断是否发送成功</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(channel.</span><span style="color:#6F42C1;">waitForConfirms</span><span style="color:#24292E;">()){</span></span>
<span class="line"><span style="color:#24292E;">                    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;消息发送成功:[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">str</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h6 id="消费者" tabindex="-1">消费者 <a class="header-anchor" href="#消费者" aria-label="Permalink to &quot;消费者&quot;">​</a></h6><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> com.rabbitmq.client.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.HashMap;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.Map;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.TimeoutException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">consumer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//队列名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String QUEUE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myQueue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//交换机名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String EXCHANGE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myDirectExchange&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//设置一个路由键</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String CONSUMER_ROUTE_KEY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;routeKey1&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//死信队列名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DEAD_QUEUE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myDeadQueue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//死信交换机名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String DEAD_EXCHANGE_NAME </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;myDeadDirectExchange&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//设置一个死信路由键</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String CONSUMER_DEAD_ROUTE_KEY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;routeKeyDead&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//是否自动应答</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> AUTO_ACK </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//是否批量应答</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> BATCH_ACK_FLAG </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> IOException, TimeoutException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ConnectionFactory connectionFactory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConnectionFactory</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setHost</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;192.168.226.128&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setPort</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5672</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setUsername</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;admin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        connectionFactory.</span><span style="color:#B392F0;">setPassword</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//创建连接</span></span>
<span class="line"><span style="color:#E1E4E8;">        Connection connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connectionFactory.</span><span style="color:#B392F0;">newConnection</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//创建信道</span></span>
<span class="line"><span style="color:#E1E4E8;">        Channel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connection.</span><span style="color:#B392F0;">createChannel</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置预取值 0-是公平分发即轮询获取 &gt;=1-不公平分发(理解:信道的容量，即最多堆积的数量)</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">basicQos</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置交换机</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">exchangeDeclare</span><span style="color:#E1E4E8;">(EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道绑定交换机和队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueBind</span><span style="color:#E1E4E8;">(QUEUE_NAME,EXCHANGE_NAME,CONSUMER_ROUTE_KEY,</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt; arguments </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">        arguments.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;x-dead-letter-exchange&quot;</span><span style="color:#E1E4E8;">,DEAD_EXCHANGE_NAME); </span><span style="color:#6A737D;">//设置死信交换机</span></span>
<span class="line"><span style="color:#E1E4E8;">        arguments.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;x-dead-letter-routing-key&quot;</span><span style="color:#E1E4E8;">,CONSUMER_DEAD_ROUTE_KEY); </span><span style="color:#6A737D;">//设置死信路由键</span></span>
<span class="line"><span style="color:#E1E4E8;">        arguments.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;x-max-length&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//设置最大存储消息量</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置死信交换机</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">exchangeDeclare</span><span style="color:#E1E4E8;">(DEAD_EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道绑定死信交换机和死信队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueBind</span><span style="color:#E1E4E8;">(DEAD_QUEUE_NAME,DEAD_EXCHANGE_NAME,CONSUMER_DEAD_ROUTE_KEY,</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//信道绑定队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueDeclare</span><span style="color:#E1E4E8;">(QUEUE_NAME,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,arguments);</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">queueDeclare</span><span style="color:#E1E4E8;">(DEAD_QUEUE_NAME,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,arguments);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//正常消费回调函数</span></span>
<span class="line"><span style="color:#E1E4E8;">        DeliverCallback deliverCallback </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (consumerTag,message) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//打印接收到的消息信息</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消费者[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">consumerTag</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;消息序号[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">message.</span><span style="color:#B392F0;">getEnvelope</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getDeliveryTag</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;路由键[&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">message.</span><span style="color:#B392F0;">getEnvelope</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getRoutingKey</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]:&quot;</span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;内容[&quot;</span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(message.</span><span style="color:#B392F0;">getBody</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;]&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//手动应答</span></span>
<span class="line"><span style="color:#E1E4E8;">            channel.</span><span style="color:#B392F0;">basicAck</span><span style="color:#E1E4E8;">(message.</span><span style="color:#B392F0;">getEnvelope</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getDeliveryTag</span><span style="color:#E1E4E8;">(),BATCH_ACK_FLAG);</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//取消消费的回调函数</span></span>
<span class="line"><span style="color:#E1E4E8;">        CancelCallback cancelCallback </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (consumerTag) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;这是返回的回调&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">         * 1.队列名</span></span>
<span class="line"><span style="color:#6A737D;">         * 2.应答方式 true-自动应答 false-手动应答</span></span>
<span class="line"><span style="color:#6A737D;">         * 3.回调函数</span></span>
<span class="line"><span style="color:#6A737D;">         * 4.取消消费的回调</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#E1E4E8;">        channel.</span><span style="color:#B392F0;">basicConsume</span><span style="color:#E1E4E8;">(QUEUE_NAME,AUTO_ACK,deliverCallback,cancelCallback);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> com.rabbitmq.client.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.HashMap;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Map;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.TimeoutException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">consumer</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//队列名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String QUEUE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myQueue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//交换机名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String EXCHANGE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myDirectExchange&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//设置一个路由键</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String CONSUMER_ROUTE_KEY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;routeKey1&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//死信队列名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DEAD_QUEUE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myDeadQueue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//死信交换机名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String DEAD_EXCHANGE_NAME </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;myDeadDirectExchange&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//设置一个死信路由键</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String CONSUMER_DEAD_ROUTE_KEY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;routeKeyDead&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//是否自动应答</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> AUTO_ACK </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//是否批量应答</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> BATCH_ACK_FLAG </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException, TimeoutException {</span></span>
<span class="line"><span style="color:#24292E;">        ConnectionFactory connectionFactory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConnectionFactory</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setHost</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;192.168.226.128&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setPort</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5672</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setUsername</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        connectionFactory.</span><span style="color:#6F42C1;">setPassword</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建连接</span></span>
<span class="line"><span style="color:#24292E;">        Connection connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connectionFactory.</span><span style="color:#6F42C1;">newConnection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建信道</span></span>
<span class="line"><span style="color:#24292E;">        Channel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connection.</span><span style="color:#6F42C1;">createChannel</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置预取值 0-是公平分发即轮询获取 &gt;=1-不公平分发(理解:信道的容量，即最多堆积的数量)</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">basicQos</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置交换机</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">exchangeDeclare</span><span style="color:#24292E;">(EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道绑定交换机和队列</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueBind</span><span style="color:#24292E;">(QUEUE_NAME,EXCHANGE_NAME,CONSUMER_ROUTE_KEY,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; arguments </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        arguments.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;x-dead-letter-exchange&quot;</span><span style="color:#24292E;">,DEAD_EXCHANGE_NAME); </span><span style="color:#6A737D;">//设置死信交换机</span></span>
<span class="line"><span style="color:#24292E;">        arguments.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;x-dead-letter-routing-key&quot;</span><span style="color:#24292E;">,CONSUMER_DEAD_ROUTE_KEY); </span><span style="color:#6A737D;">//设置死信路由键</span></span>
<span class="line"><span style="color:#24292E;">        arguments.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;x-max-length&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//设置最大存储消息量</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置死信交换机</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">exchangeDeclare</span><span style="color:#24292E;">(DEAD_EXCHANGE_NAME,BuiltinExchangeType.DIRECT);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道绑定死信交换机和死信队列</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueBind</span><span style="color:#24292E;">(DEAD_QUEUE_NAME,DEAD_EXCHANGE_NAME,CONSUMER_DEAD_ROUTE_KEY,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//信道绑定队列</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueDeclare</span><span style="color:#24292E;">(QUEUE_NAME,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,arguments);</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">queueDeclare</span><span style="color:#24292E;">(DEAD_QUEUE_NAME,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,arguments);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//正常消费回调函数</span></span>
<span class="line"><span style="color:#24292E;">        DeliverCallback deliverCallback </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (consumerTag,message) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//打印接收到的消息信息</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;消费者[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">consumerTag</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;消息序号[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">message.</span><span style="color:#6F42C1;">getEnvelope</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getDeliveryTag</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;路由键[&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">message.</span><span style="color:#6F42C1;">getEnvelope</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getRoutingKey</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]:&quot;</span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;内容[&quot;</span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(message.</span><span style="color:#6F42C1;">getBody</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//手动应答</span></span>
<span class="line"><span style="color:#24292E;">            channel.</span><span style="color:#6F42C1;">basicAck</span><span style="color:#24292E;">(message.</span><span style="color:#6F42C1;">getEnvelope</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getDeliveryTag</span><span style="color:#24292E;">(),BATCH_ACK_FLAG);</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//取消消费的回调函数</span></span>
<span class="line"><span style="color:#24292E;">        CancelCallback cancelCallback </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (consumerTag) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;这是返回的回调&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">         * 1.队列名</span></span>
<span class="line"><span style="color:#6A737D;">         * 2.应答方式 true-自动应答 false-手动应答</span></span>
<span class="line"><span style="color:#6A737D;">         * 3.回调函数</span></span>
<span class="line"><span style="color:#6A737D;">         * 4.取消消费的回调</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#24292E;">        channel.</span><span style="color:#6F42C1;">basicConsume</span><span style="color:#24292E;">(QUEUE_NAME,AUTO_ACK,deliverCallback,cancelCallback);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注：</p><ul><li><p>一个信道可以对应多个交换机，一个交换机可以绑定多个队列</p></li><li><p>交换机和队列中间有个routing_key(路由键)，路由键在交换机是direct的时候起作用</p></li><li><p>死信队列出现的情况</p><ul><li>消息被拒绝</li><li>消息超时响应</li><li>队列达到最大长度</li></ul></li><li><p>消息的应答方式有自动应答和手动应答，手动应答时可通过回调函数处理逻辑</p></li></ul>`,33),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const D=s(p,[["render",t]]);export{A as __pageData,D as default};
