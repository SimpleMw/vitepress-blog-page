import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.a0a80147.js";const F=JSON.parse('{"title":"Mybaisplus相关","description":"","frontmatter":{"title":"Mybaisplus相关","date":"2020-11-07T10:20:27.000Z"},"headers":[],"relativePath":"guide/springboot/mybatisplus.md","filePath":"guide/springboot/mybatisplus.md"}'),l={name:"guide/springboot/mybatisplus.md"},o=p(`<p>此为mybatisplus的使用方式 mybatis <a href="http://simplemw.gitee.io/blog/2020/11/26/spring-mybatis.html" target="_blank" rel="noreferrer">点击</a> 进入</p><h3 id="querywrapper构造器方式" tabindex="-1">QueryWrapper构造器方式 <a class="header-anchor" href="#querywrapper构造器方式" aria-label="Permalink to &quot;QueryWrapper构造器方式&quot;">​</a></h3><p>QueryWrapper构造器是来构建where条件的，所以只有删改查才会用到</p><h4 id="步骤1" tabindex="-1">步骤1 <a class="header-anchor" href="#步骤1" aria-label="Permalink to &quot;步骤1&quot;">​</a></h4><ul><li>mapper类继承 BaseMapper&lt;&gt;类</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Mapper</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PojoMapper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseMapper</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Pojo</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Mapper</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PojoMapper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseMapper</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Pojo</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="步骤2" tabindex="-1">步骤2 <a class="header-anchor" href="#步骤2" aria-label="Permalink to &quot;步骤2&quot;">​</a></h4><ul><li>serviceimple类调用方法</li></ul><h5 id="查询" tabindex="-1">查询 <a class="header-anchor" href="#查询" aria-label="Permalink to &quot;查询&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#E1E4E8;">QueryWrapper&lt;</span><span style="color:#F97583;">Pojo</span><span style="color:#E1E4E8;">&gt; queryWrapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;值&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNotNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#E1E4E8;">PojoMapper.</span><span style="color:#B392F0;">selectList</span><span style="color:#E1E4E8;">(queryWrapper);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#24292E;">QueryWrapper&lt;</span><span style="color:#D73A49;">Pojo</span><span style="color:#24292E;">&gt; queryWrapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;值&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNotNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#24292E;">PojoMapper.</span><span style="color:#6F42C1;">selectList</span><span style="color:#24292E;">(queryWrapper);</span></span></code></pre></div><p>如果是in的查询条件的话，就将eq改为in</p><h5 id="修改" tabindex="-1">修改 <a class="header-anchor" href="#修改" aria-label="Permalink to &quot;修改&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#E1E4E8;">QueryWrapper&lt;</span><span style="color:#F97583;">Pojo</span><span style="color:#E1E4E8;">&gt; queryWrapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;值&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNotNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#E1E4E8;">PojoMapper.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(pojo对象,queryWrapper);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#24292E;">QueryWrapper&lt;</span><span style="color:#D73A49;">Pojo</span><span style="color:#24292E;">&gt; queryWrapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;值&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNotNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#24292E;">PojoMapper.</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(pojo对象,queryWrapper);</span></span></code></pre></div><p>queryWrapper中的值为where后的条件，实际的修改是将pojo中的数据替换满足条件的数据</p><h5 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#E1E4E8;">QueryWrapper&lt;</span><span style="color:#F97583;">Pojo</span><span style="color:#E1E4E8;">&gt; queryWrapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;值&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNotNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">isNull</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;表字段名&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#E1E4E8;">PojoMapper.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(queryWrapper);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//创建queryWrapper对象</span></span>
<span class="line"><span style="color:#24292E;">QueryWrapper&lt;</span><span style="color:#D73A49;">Pojo</span><span style="color:#24292E;">&gt; queryWrapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//传入有值类条件</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;值&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is not null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNotNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//传入无值类条件 表字段名 is null</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">isNull</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;表字段名&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//查询</span></span>
<span class="line"><span style="color:#24292E;">PojoMapper.</span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">(queryWrapper);</span></span></code></pre></div><h5 id="增加" tabindex="-1">增加 <a class="header-anchor" href="#增加" aria-label="Permalink to &quot;增加&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">PojoMapper.</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(pojo对象);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">PojoMapper.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(pojo对象);</span></span></code></pre></div><p>注：增加不需要创建queryWrapper来构建条件</p><h5 id="分页查询" tabindex="-1">分页查询 <a class="header-anchor" href="#分页查询" aria-label="Permalink to &quot;分页查询&quot;">​</a></h5><p>mybatisplus 使用pagehelper分页</p><ul><li>mybatisplus自带了pagehelper不用注入依赖</li><li>添加配置类</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MybatisPlus</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> PaginationInterceptor </span><span style="color:#B392F0;">paginationInterceptor</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        PaginationInterceptor paginationInterceptor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PaginationInterceptor</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> paginationInterceptor;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MybatisPlus</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> PaginationInterceptor </span><span style="color:#6F42C1;">paginationInterceptor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        PaginationInterceptor paginationInterceptor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PaginationInterceptor</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> paginationInterceptor;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>application或者bootstrap配置</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">pagehelper</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#默认为false,合理化查询，页码&lt;=0的时候查询第一页，超过最大页查询最后一页</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">reasonable</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#默认为false,设置为true当设置pageSize为0的时候查全部</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">pageSizeZero</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#pageSize=0</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#默认为false,判断Dao要执行的方法参数列表是否有pageNum和pageSize参数，有会自动进行分页</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">supportMethodsArguments</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#默认为false,多数据源时自动识别分页方言</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">autoRuntimeDialect</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">pagehelper</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#默认为false,合理化查询，页码&lt;=0的时候查询第一页，超过最大页查询最后一页</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">reasonable</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#默认为false,设置为true当设置pageSize为0的时候查全部</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">pageSizeZero</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#pageSize=0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#默认为false,判断Dao要执行的方法参数列表是否有pageNum和pageSize参数，有会自动进行分页</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">supportMethodsArguments</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#默认为false,多数据源时自动识别分页方言</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">autoRuntimeDialect</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span></code></pre></div><ul><li>mapper配置(plus中需要mapper去继承BaseMapper)</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Mapper</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintTemplateMapper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseMapper</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">PrintTemplate</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Mapper</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintTemplateMapper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseMapper</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">PrintTemplate</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>service中写法</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">QueryWrapper&lt;</span><span style="color:#F97583;">PrintTemplate</span><span style="color:#E1E4E8;">&gt; queryWrapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//填入分页信息</span></span>
<span class="line"><span style="color:#E1E4E8;">Page&lt;</span><span style="color:#F97583;">PrintTemplate</span><span style="color:#E1E4E8;">&gt; page </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Page&lt;&gt;(pageIndex, pageSize);</span></span>
<span class="line"><span style="color:#6A737D;">//填入条件</span></span>
<span class="line"><span style="color:#E1E4E8;">queryWrapper.</span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;123&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">//分页查询</span></span>
<span class="line"><span style="color:#E1E4E8;">printTemplateMapper.</span><span style="color:#B392F0;">selectPage</span><span style="color:#E1E4E8;">(page, queryWrapper);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">QueryWrapper&lt;</span><span style="color:#D73A49;">PrintTemplate</span><span style="color:#24292E;">&gt; queryWrapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> QueryWrapper&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">//填入分页信息</span></span>
<span class="line"><span style="color:#24292E;">Page&lt;</span><span style="color:#D73A49;">PrintTemplate</span><span style="color:#24292E;">&gt; page </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Page&lt;&gt;(pageIndex, pageSize);</span></span>
<span class="line"><span style="color:#6A737D;">//填入条件</span></span>
<span class="line"><span style="color:#24292E;">queryWrapper.</span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;123&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//分页查询</span></span>
<span class="line"><span style="color:#24292E;">printTemplateMapper.</span><span style="color:#6F42C1;">selectPage</span><span style="color:#24292E;">(page, queryWrapper);</span></span></code></pre></div><h3 id="xml配置sql方式" tabindex="-1">xml配置SQL方式 <a class="header-anchor" href="#xml配置sql方式" aria-label="Permalink to &quot;xml配置SQL方式&quot;">​</a></h3><p>此种方式很灵活，要做什么crud直接写sql进去就行，多表连表查询一般用此种方式</p><h4 id="步骤1-1" tabindex="-1">步骤1 <a class="header-anchor" href="#步骤1-1" aria-label="Permalink to &quot;步骤1&quot;">​</a></h4><ul><li>写mapper接口</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Mapper</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PojoMapper</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">Pojo</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">selectAll</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">linename</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Mapper</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PojoMapper</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">Pojo</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">selectAll</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">linename</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="步骤2-1" tabindex="-1">步骤2 <a class="header-anchor" href="#步骤2-1" aria-label="Permalink to &quot;步骤2&quot;">​</a></h4><ul><li>实现mapper.xml接口，我放的路径为 resources/Mybatis/PojoMapper.xml</li></ul><div class="language-XML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">XML</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#B392F0;"> encoding</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;"> ?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">mapper</span><span style="color:#E1E4E8;"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 这里绑定mapper接口 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">namespace</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;com.simplemw.mapper.PojoMapper&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">&lt;!-- 中间实现接口中的方法 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectAll&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;com.simplemw.mapper.pojo.Pojo&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    	select * from tablename where linename=#{linename}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mapper</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#6F42C1;"> encoding</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;"> ?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">mapper</span><span style="color:#24292E;"> PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 这里绑定mapper接口 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">namespace</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.simplemw.mapper.PojoMapper&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- 中间实现接口中的方法 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectAll&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.simplemw.mapper.pojo.Pojo&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    	select * from tablename where linename=#{linename}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><ul><li>添加application.yml配置</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">mybatis-plus</span><span style="color:#E1E4E8;">: </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">mapper-locations</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">classpath:Mybatis/**/*Mapper.xml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">: </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">mapper-locations</span><span style="color:#24292E;">: </span><span style="color:#032F62;">classpath:Mybatis/**/*Mapper.xml</span></span></code></pre></div><h3 id="自动填入值" tabindex="-1">自动填入值 <a class="header-anchor" href="#自动填入值" aria-label="Permalink to &quot;自动填入值&quot;">​</a></h3><p>场景：</p><ul><li>数据新增时，需要自动产生ID、需要自动导入产生时间</li><li>数据修改时，需要自动导入编辑时间</li></ul><p>使用mybatisplus的TableField类</p><h4 id="填入uuid" tabindex="-1">填入UUID <a class="header-anchor" href="#填入uuid" aria-label="Permalink to &quot;填入UUID&quot;">​</a></h4><p>pojo属性字段添加注解</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">TableId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> IdType.ASSIGN_ID)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> IdType.ASSIGN_ID)</span></span></code></pre></div><h4 id="填入其它值" tabindex="-1">填入其它值 <a class="header-anchor" href="#填入其它值" aria-label="Permalink to &quot;填入其它值&quot;">​</a></h4><p>这里以自动导入时间为例，解决办法使用 MetaObjectHandler</p><ul><li>实现 MetaObjectHandler 接口，并实现 insertFill、updateFill方法(其两种方法主要是定义 在插入操作或者更新操作的时候哪些值可以自动导入，以及导入什么值)</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Component</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MybatisObjectHandler</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MetaObjectHandler</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">insertFill</span><span style="color:#E1E4E8;">(MetaObject </span><span style="color:#FFAB70;">metaObject</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setFieldValByName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;createdDt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SimpleDateFormat</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()),metaObject);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setFieldValByName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;deletedDt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,metaObject);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setFieldValByName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lastEditedDt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SimpleDateFormat</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()),metaObject);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateFill</span><span style="color:#E1E4E8;">(MetaObject </span><span style="color:#FFAB70;">metaObject</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setFieldValByName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lastEditedDt&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SimpleDateFormat</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()),metaObject);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Component</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MybatisObjectHandler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MetaObjectHandler</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertFill</span><span style="color:#24292E;">(MetaObject </span><span style="color:#E36209;">metaObject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createdDt&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;deletedDt&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,metaObject);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lastEditedDt&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFill</span><span style="color:#24292E;">(MetaObject </span><span style="color:#E36209;">metaObject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lastEditedDt&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注：需要@Component 扫描</p><ul><li><p>pojo属性字段添加注解</p><p>DEFAULT 默认不处理</p><p>INSERT 插入填充字段</p><p>UPDATE 更新填充字段</p><p>INSERT_UPDATE 插入和更新填充字段</p></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">TableField</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">fill</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FieldFill.INSERT)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableField</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fill</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FieldFill.INSERT)</span></span></code></pre></div><p>注解功能解释：即当为插入数据库时，自动填充值进下面的属性</p><h3 id="持续更新中" tabindex="-1">持续更新中 <a class="header-anchor" href="#持续更新中" aria-label="Permalink to &quot;持续更新中&quot;">​</a></h3>`,55),e=[o];function t(r,c,y,E,i,u){return a(),n("div",null,e)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
