import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a0a80147.js";const C=JSON.parse('{"title":"java基本数据流","description":"","frontmatter":{"title":"java基本数据流","date":"2020-10-01T08:34:36.000Z","category":"java基础相关","tag":"java","top_img":false},"headers":[],"relativePath":"guide/javabasic/IO流.md","filePath":"guide/javabasic/IO流.md"}'),p={name:"guide/javabasic/IO流.md"},o=l(`<h1 id="字节流、字符流" tabindex="-1">字节流、字符流 <a class="header-anchor" href="#字节流、字符流" aria-label="Permalink to &quot;字节流、字符流&quot;">​</a></h1><ul><li>能用字符流的一定能用字节流</li><li>能用字节流的不一定能用字符流</li></ul><hr><h3 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h3><ul><li>连接数据源 File类构建路径</li><li>拿到字节流或字符流对象</li><li>输入或者输出操作</li><li>关闭字节流或者关闭字符流</li></ul><hr><ul><li>文件操作</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//创建文件路径,创建文件名</span></span>
<span class="line"><span style="color:#E1E4E8;">    String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    String filename </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;123.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//根据路径和文件名创建文件对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    File f</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path,filename); 	</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;文件长度：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">f.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;字节&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;文件或者目录：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">isFile</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;是文件&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;不是文件&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;文件或者目录：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">isDirectory</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;是目录&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;不是目录&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;是否可读：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">canRead</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;可读取&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;不可读取&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;是否可写：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">canWrite</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;可写入&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;不可写入&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;是否隐藏：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">isHidden</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;是隐藏文件&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;不是隐藏文件&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;最后修改日期：&quot;</span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">lastModified</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;文件名称：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">f.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;文件路径：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">f.</span><span style="color:#B392F0;">getPath</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;绝对路径：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">f.</span><span style="color:#B392F0;">getAbsolutePath</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//删除文件 和 创建新文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">exists</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        f.</span><span style="color:#B392F0;">createNewFile</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//创建文件路径,创建文件名</span></span>
<span class="line"><span style="color:#24292E;">    String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    String filename </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;123.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//根据路径和文件名创建文件对象</span></span>
<span class="line"><span style="color:#24292E;">    File f</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path,filename); 	</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件长度：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">f.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;字节&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件或者目录：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">isFile</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;是文件&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;不是文件&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件或者目录：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">isDirectory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;是目录&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;不是目录&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;是否可读：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">canRead</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;可读取&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;不可读取&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;是否可写：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">canWrite</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;可写入&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;不可写入&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;是否隐藏：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">isHidden</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;是隐藏文件&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;不是隐藏文件&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;最后修改日期：&quot;</span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">lastModified</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件名称：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">f.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件路径：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">f.</span><span style="color:#6F42C1;">getPath</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;绝对路径：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">f.</span><span style="color:#6F42C1;">getAbsolutePath</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//删除文件 和 创建新文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">exists</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        f.</span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        f.</span><span style="color:#6F42C1;">createNewFile</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注：File不是创建文件的函数，而是创建路径的函数；new File(),括号中填的参数列表只要能拼出路径就行</p><ul><li>目录操作</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Desktop</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">123&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">//创建路径对象</span></span>
<span class="line"><span style="color:#E1E4E8;">File f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path);</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(f.</span><span style="color:#B392F0;">exists</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">();	</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.</span><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Desktop</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">123&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">//创建路径对象</span></span>
<span class="line"><span style="color:#24292E;">File f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(f.</span><span style="color:#6F42C1;">exists</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    f.</span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">();	</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    f.</span><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>遍历目录下的文件</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">File f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path);</span></span>
<span class="line"><span style="color:#E1E4E8;">String Filelist[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Filelist.length;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{    </span><span style="color:#6A737D;">//遍历返回的字符数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i]</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i])).</span><span style="color:#B392F0;">isFile</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;文件&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;文件夹&quot;</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i])).</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;字节&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">File f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">String Filelist[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.</span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Filelist.length;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{    </span><span style="color:#6A737D;">//遍历返回的字符数组</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i]</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i])).</span><span style="color:#6F42C1;">isFile</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;文件&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;文件夹&quot;</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i])).</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;字节&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>显示目录下的 特定文件类型的 文件 <ul><li>实现文件名过滤接口</li></ul></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileFilter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FilenameFilter</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	@</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">accept</span><span style="color:#E1E4E8;">(File </span><span style="color:#FFAB70;">dir</span><span style="color:#E1E4E8;">, String </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">//过滤文件格式为.txt和.exe的文件</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> name.</span><span style="color:#B392F0;">endsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;.txt&quot;</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;">name.</span><span style="color:#B392F0;">endsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;.exe&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">		String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		File f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">//获取 文件名过滤的文件</span></span>
<span class="line"><span style="color:#E1E4E8;">		String Filelist[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileFilter</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">//遍历文件</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Filelist.length;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        {    </span><span style="color:#6A737D;">//遍历返回的字符数组</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i]</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i])).</span><span style="color:#B392F0;">isFile</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;">&quot;文件&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;文件夹&quot;</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\\\\\</span><span style="color:#9ECBFF;">Desktop&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Filelist</span><span style="color:#E1E4E8;">[i])).</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;字节&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileFilter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FilenameFilter</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">accept</span><span style="color:#24292E;">(File </span><span style="color:#E36209;">dir</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">//过滤文件格式为.txt和.exe的文件</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> name.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.txt&quot;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">||</span><span style="color:#24292E;">name.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.exe&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">		String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		File f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">//获取 文件名过滤的文件</span></span>
<span class="line"><span style="color:#24292E;">		String Filelist[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.</span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileFilter</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">//遍历文件</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Filelist.length;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        {    </span><span style="color:#6A737D;">//遍历返回的字符数组</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i]</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i])).</span><span style="color:#6F42C1;">isFile</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">?</span><span style="color:#032F62;">&quot;文件&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;文件夹&quot;</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\\\\\</span><span style="color:#032F62;">Desktop&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Filelist</span><span style="color:#24292E;">[i])).</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;字节&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span></code></pre></div><p>参考 <a href="http://c.biancheng.net/view/1133.html" target="_blank" rel="noreferrer">http://c.biancheng.net/view/1133.html</a></p><h4 id="动态读取文件" tabindex="-1">动态读取文件 <a class="header-anchor" href="#动态读取文件" aria-label="Permalink to &quot;动态读取文件&quot;">​</a></h4><h5 id="randomaccessfile篇" tabindex="-1">RandomAccessFile篇 <a class="header-anchor" href="#randomaccessfile篇" aria-label="Permalink to &quot;RandomAccessFile篇&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> demo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.File;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.FileNotFoundException;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.RandomAccessFile;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.io.UnsupportedEncodingException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">wjrw</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">//固定路径下创建一个文件</span></span>
<span class="line"><span style="color:#E1E4E8;">		String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Users</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">SimpleManWp</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">Desktop</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">123.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		File file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(file.</span><span style="color:#B392F0;">exists</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">			file.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				file.</span><span style="color:#B392F0;">createNewFile</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#6A737D;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#E1E4E8;">				e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				file.</span><span style="color:#B392F0;">createNewFile</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#6A737D;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#E1E4E8;">				e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			RandomAccessFile rf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RandomAccessFile</span><span style="color:#E1E4E8;">(file,</span><span style="color:#9ECBFF;">&quot;rw&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#6A737D;">//创建要写入的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">			String str1</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;男儿横行当有术，区区莽夫难登天&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#6A737D;">//进行编码转换</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				String str2</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(str1.</span><span style="color:#B392F0;">getBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;GBK&quot;</span><span style="color:#E1E4E8;">),</span><span style="color:#9ECBFF;">&quot;iso8859-1&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#6A737D;">//将要写入的 字符串写入文件</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//按照内容不同使用不同的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">					rf.</span><span style="color:#B392F0;">writeBytes</span><span style="color:#E1E4E8;">(str2);</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//获取当前指针的位置</span></span>
<span class="line"><span style="color:#E1E4E8;">					System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(rf.</span><span style="color:#B392F0;">getFilePointer</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//移动指针位置</span></span>
<span class="line"><span style="color:#E1E4E8;">					rf.</span><span style="color:#B392F0;">seek</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//创建一个定长的数组</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] buffer</span><span style="color:#F97583;">=new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//read函数 在文件rf中的当前指针下截取(buffer长度)数据放在buffer数组中</span></span>
<span class="line"><span style="color:#E1E4E8;">					rf.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(buffer);</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#6A737D;">//将数组buffer中的数据以字符串形式输出</span></span>
<span class="line"><span style="color:#E1E4E8;">					System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(buffer));</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span></span>
<span class="line"><span style="color:#E1E4E8;">				} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">					e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (UnsupportedEncodingException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">			} 	</span></span>
<span class="line"><span style="color:#E1E4E8;">		} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (FileNotFoundException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">			e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> demo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.File;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.FileNotFoundException;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.RandomAccessFile;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.io.UnsupportedEncodingException;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">wjrw</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">//固定路径下创建一个文件</span></span>
<span class="line"><span style="color:#24292E;">		String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Users</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">SimpleManWp</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Desktop</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">123.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(file.</span><span style="color:#6F42C1;">exists</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">			file.</span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				file.</span><span style="color:#6F42C1;">createNewFile</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6A737D;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#24292E;">				e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				file.</span><span style="color:#6F42C1;">createNewFile</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6A737D;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#24292E;">				e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			RandomAccessFile rf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RandomAccessFile</span><span style="color:#24292E;">(file,</span><span style="color:#032F62;">&quot;rw&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">//创建要写入的字符串</span></span>
<span class="line"><span style="color:#24292E;">			String str1</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;男儿横行当有术，区区莽夫难登天&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">//进行编码转换</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				String str2</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(str1.</span><span style="color:#6F42C1;">getBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;GBK&quot;</span><span style="color:#24292E;">),</span><span style="color:#032F62;">&quot;iso8859-1&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6A737D;">//将要写入的 字符串写入文件</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//按照内容不同使用不同的方法</span></span>
<span class="line"><span style="color:#24292E;">					rf.</span><span style="color:#6F42C1;">writeBytes</span><span style="color:#24292E;">(str2);</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//获取当前指针的位置</span></span>
<span class="line"><span style="color:#24292E;">					System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(rf.</span><span style="color:#6F42C1;">getFilePointer</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//移动指针位置</span></span>
<span class="line"><span style="color:#24292E;">					rf.</span><span style="color:#6F42C1;">seek</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//创建一个定长的数组</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] buffer</span><span style="color:#D73A49;">=new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//read函数 在文件rf中的当前指针下截取(buffer长度)数据放在buffer数组中</span></span>
<span class="line"><span style="color:#24292E;">					rf.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(buffer);</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6A737D;">//将数组buffer中的数据以字符串形式输出</span></span>
<span class="line"><span style="color:#24292E;">					System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(buffer));</span></span>
<span class="line"><span style="color:#24292E;">					</span></span>
<span class="line"><span style="color:#24292E;">				} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">					e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (UnsupportedEncodingException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			} 	</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (FileNotFoundException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注：使用read()方法后，指针会进行移位 例: 文件中的句子为 &quot;男儿横行当有术，区区莽夫难登天&quot;,下面打印的就是&quot;区区莽夫难登天&quot;</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//创建一个定长数组</span></span>
<span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] buffer1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] buffer2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] buffer3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#6A737D;">//读取rf当前 指针下 buffer1长度的 数据放在buffer中</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第7个汉字之后</span></span>
<span class="line"><span style="color:#E1E4E8;">rf.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(buffer1);</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第8个汉字之后</span></span>
<span class="line"><span style="color:#E1E4E8;">rf.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(buffer2);</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第15个汉字之后</span></span>
<span class="line"><span style="color:#E1E4E8;">rf.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(buffer3);</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(buffer3));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//创建一个定长数组</span></span>
<span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] buffer1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] buffer2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] buffer3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">//读取rf当前 指针下 buffer1长度的 数据放在buffer中</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第7个汉字之后</span></span>
<span class="line"><span style="color:#24292E;">rf.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(buffer1);</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第8个汉字之后</span></span>
<span class="line"><span style="color:#24292E;">rf.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(buffer2);</span></span>
<span class="line"><span style="color:#6A737D;">//执行之后指针跳至第15个汉字之后</span></span>
<span class="line"><span style="color:#24292E;">rf.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(buffer3);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(buffer3));</span></span></code></pre></div><ul><li>循环获取 根据前面两种结合，循环读取</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] buffer1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> len</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">((len</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">rf.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(buffer1))</span><span style="color:#F97583;">!=-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(buffer1));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] buffer1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> len</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">((len</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">rf.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(buffer1))</span><span style="color:#D73A49;">!=-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(buffer1));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><a href="https://blog.csdn.net/weixin_41543601/article/details/88638342" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_41543601/article/details/88638342</a></p><h2 id="inputstream篇" tabindex="-1">InputStream篇 <a class="header-anchor" href="#inputstream篇" aria-label="Permalink to &quot;InputStream篇&quot;">​</a></h2><h3 id="fileinputstream" tabindex="-1">FileInputStream <a class="header-anchor" href="#fileinputstream" aria-label="Permalink to &quot;FileInputStream&quot;">​</a></h3><ul><li>第一种读取固定长度的数据</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    String name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;测试文件.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#E1E4E8;">    File file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    InputStream input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> bytes[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//自我理解用创建的byte数组去input里面去装</span></span>
<span class="line"><span style="color:#E1E4E8;">    input.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(bytes);   </span><span style="color:#6A737D;">//亲测，txt中换行符占两个字节</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">    input.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(bytes));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#24292E;">    String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    String name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;测试文件.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#24292E;">    File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#24292E;">    InputStream input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> bytes[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//自我理解用创建的byte数组去input里面去装</span></span>
<span class="line"><span style="color:#24292E;">    input.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(bytes);   </span><span style="color:#6A737D;">//亲测，txt中换行符占两个字节</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//关闭</span></span>
<span class="line"><span style="color:#24292E;">    input.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(bytes));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>第二种读取文件大小的数据，直接读取全部</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    String name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;测试文件.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#E1E4E8;">    File file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    InputStream input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组,数组大小为文件大小</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> bytes[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)file.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()];</span></span>
<span class="line"><span style="color:#E1E4E8;">    input.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(bytes);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">    input.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(bytes));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#24292E;">    String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    String name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;测试文件.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#24292E;">    File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#24292E;">    InputStream input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组,数组大小为文件大小</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> bytes[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">)file.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()];</span></span>
<span class="line"><span style="color:#24292E;">    input.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(bytes);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//关闭</span></span>
<span class="line"><span style="color:#24292E;">    input.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(bytes));</span></span></code></pre></div><ul><li>第三种读取文件大小的数据，挨个读取字节，不存在下一个的时候停止</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    String name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;测试文件.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#E1E4E8;">    File file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    InputStream input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组,数组大小为文件大小</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> bytes[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)file.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> len </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//挨个读取input中的每个字节，当出现读取不到，read()返回值为-1的时候，就不再读取（read读取到的每个字节都会对应一个数字，当为空的时候为-1）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">((temp</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">input.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">())</span><span style="color:#F97583;">!=-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        bytes[len] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">)temp ;</span></span>
<span class="line"><span style="color:#E1E4E8;">        len</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(bytes));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#24292E;">    String path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C:/Users/SimpleManWp/Desktop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    String name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;测试文件.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//只要括号中能拼出路径就行了，写法多样</span></span>
<span class="line"><span style="color:#24292E;">    File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(path,name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//拿到需要读取的字节流对象</span></span>
<span class="line"><span style="color:#24292E;">    InputStream input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(file);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//创建一个去拿数据的byte数组,数组大小为文件大小</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> bytes[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">)file.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//挨个读取input中的每个字节，当出现读取不到，read()返回值为-1的时候，就不再读取（read读取到的每个字节都会对应一个数字，当为空的时候为-1）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">((temp</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">input.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">())</span><span style="color:#D73A49;">!=-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        bytes[len] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">)temp ;</span></span>
<span class="line"><span style="color:#24292E;">        len</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(bytes));</span></span></code></pre></div><p><a href="https://www.cnblogs.com/kongxianghao/articles/6879367.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/kongxianghao/articles/6879367.html</a></p><h2 id="outputstream篇" tabindex="-1">outputStream篇 <a class="header-anchor" href="#outputstream篇" aria-label="Permalink to &quot;outputStream篇&quot;">​</a></h2><h3 id="fileoutputstream" tabindex="-1">FileOutputStream <a class="header-anchor" href="#fileoutputstream" aria-label="Permalink to &quot;FileOutputStream&quot;">​</a></h3><ul><li>按字节流来读取和写入</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws IOException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//获取文件路径对象</span></span>
<span class="line"><span style="color:#E1E4E8;">File intfile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:/Users/SimpleManWp/Desktop/桌面文件.txt&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">//创建文件对象</span></span>
<span class="line"><span style="color:#E1E4E8;">FileInputStream input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(intfile);</span></span>
<span class="line"><span style="color:#6A737D;">//创建读取文件大小的byte数组</span></span>
<span class="line"><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] bytes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) intfile.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">()];</span></span>
<span class="line"><span style="color:#6A737D;">//将读取的数据放在创建的数组中</span></span>
<span class="line"><span style="color:#E1E4E8;">input.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(bytes);</span></span>
<span class="line"><span style="color:#6A737D;">//byte数组中得到的 是字节流，强转char，字节流转字符流</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">bytes.length;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">((</span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;">)bytes[i]);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//关闭文件读取</span></span>
<span class="line"><span style="color:#E1E4E8;">input.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//获取要写入的字符串，添加&quot;\\r&quot;、&quot;\\n&quot;、&quot;\\r\\n&quot;都是换行,&quot;\\t&quot;是空格</span></span>
<span class="line"><span style="color:#E1E4E8;">String str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;66666&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;123&quot;</span><span style="color:#F97583;">+new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(bytes);</span></span>
<span class="line"><span style="color:#6A737D;">//获取文件路径对象</span></span>
<span class="line"><span style="color:#E1E4E8;">File file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C:/Users/SimpleManWp/Desktop/桌面文件.txt&quot;</span><span style="color:#E1E4E8;">)	;</span></span>
<span class="line"><span style="color:#6A737D;">//创建文件对象</span></span>
<span class="line"><span style="color:#E1E4E8;">FileOutputStream output </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileOutputStream</span><span style="color:#E1E4E8;">(file);</span></span>
<span class="line"><span style="color:#6A737D;">//文件写入新的 byte数组</span></span>
<span class="line"><span style="color:#E1E4E8;">output.</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">getBytes</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#6A737D;">//关不文件写入</span></span>
<span class="line"><span style="color:#E1E4E8;">output.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//获取文件路径对象</span></span>
<span class="line"><span style="color:#24292E;">File intfile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:/Users/SimpleManWp/Desktop/桌面文件.txt&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">//创建文件对象</span></span>
<span class="line"><span style="color:#24292E;">FileInputStream input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(intfile);</span></span>
<span class="line"><span style="color:#6A737D;">//创建读取文件大小的byte数组</span></span>
<span class="line"><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] bytes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) intfile.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">()];</span></span>
<span class="line"><span style="color:#6A737D;">//将读取的数据放在创建的数组中</span></span>
<span class="line"><span style="color:#24292E;">input.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(bytes);</span></span>
<span class="line"><span style="color:#6A737D;">//byte数组中得到的 是字节流，强转char，字节流转字符流</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">bytes.length;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">char</span><span style="color:#24292E;">)bytes[i]);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//关闭文件读取</span></span>
<span class="line"><span style="color:#24292E;">input.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//获取要写入的字符串，添加&quot;\\r&quot;、&quot;\\n&quot;、&quot;\\r\\n&quot;都是换行,&quot;\\t&quot;是空格</span></span>
<span class="line"><span style="color:#24292E;">String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;66666&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\r</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;123&quot;</span><span style="color:#D73A49;">+new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(bytes);</span></span>
<span class="line"><span style="color:#6A737D;">//获取文件路径对象</span></span>
<span class="line"><span style="color:#24292E;">File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C:/Users/SimpleManWp/Desktop/桌面文件.txt&quot;</span><span style="color:#24292E;">)	;</span></span>
<span class="line"><span style="color:#6A737D;">//创建文件对象</span></span>
<span class="line"><span style="color:#24292E;">FileOutputStream output </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileOutputStream</span><span style="color:#24292E;">(file);</span></span>
<span class="line"><span style="color:#6A737D;">//文件写入新的 byte数组</span></span>
<span class="line"><span style="color:#24292E;">output.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">getBytes</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#6A737D;">//关不文件写入</span></span>
<span class="line"><span style="color:#24292E;">output.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,37),t=[o];function e(c,r,y,E,i,F){return n(),a("div",null,t)}const D=s(p,[["render",e]]);export{C as __pageData,D as default};
