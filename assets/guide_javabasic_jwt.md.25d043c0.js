import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a0a80147.js";const D=JSON.parse('{"title":"jwt理解","description":"","frontmatter":{"title":"jwt理解","date":"2020-10-28T18:34:36.000Z","category":"java基础相关","tag":"java","top_img":false},"headers":[],"relativePath":"guide/javabasic/jwt.md","filePath":"guide/javabasic/jwt.md"}'),p={name:"guide/javabasic/jwt.md"},o=l(`<h4 id="组成" tabindex="-1">组成 <a class="header-anchor" href="#组成" aria-label="Permalink to &quot;组成&quot;">​</a></h4><p>java web token简称jwt</p><ul><li><p>组成</p><ul><li><p>头部(header)</p><p>头部存 类型和加密算法</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{ </span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">“typ”</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">“JWT”</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">“alg”</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">“HS</span><span style="color:#79B8FF;">256</span><span style="color:#FDAEB7;font-style:italic;">”</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">“typ”</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">“JWT”</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">“alg”</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">“HS</span><span style="color:#005CC5;">256</span><span style="color:#B31D28;font-style:italic;">”</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></li><li><p>有效载荷(playload)</p><p>实际需要保存的参数，如token签发者、签发时间、到期时间，以及如用户名之类的后续需要用到的参数。 注：如密码等涉及到安全的信息不宜放进去</p></li><li><p>签名(signature)</p><p>头部和有效载荷加上密钥通过头部里面的加密算法进行加密后得到</p></li></ul></li><li><p>头部与有效载荷均通过base64进行加密</p></li></ul><h4 id="应用环境" tabindex="-1">应用环境 <a class="header-anchor" href="#应用环境" aria-label="Permalink to &quot;应用环境&quot;">​</a></h4><p>二次登录，即第一次登录后，关闭页面，一段时间内重新访问不需要重新登录</p><ul><li><p>原实现方式：由服务器存储登录信息，当第二次请求过来时判断以前是否登录过，若是则直接访问</p><ul><li>客户端请求</li><li>服务器产生登录信息</li><li>登录信息传给客户端，客户端存储在cookie中</li><li>客户端第二次访问时带cookie请求</li><li>服务器端进行校验</li></ul><p>注：弊端，由于登录信息存在session中，即存在内存中会占用服务器资源</p></li><li><p>现解决办法：第一次登录请求，服务器产生token，存储客户端，第二次访问校验token</p><ul><li>客户端请求</li><li>服务端产生token</li><li>客户端存储token</li><li>客户端第二次访问时带token</li><li>服务器进行校验</li></ul></li></ul><h4 id="解决疑问" tabindex="-1">解决疑问 <a class="header-anchor" href="#解决疑问" aria-label="Permalink to &quot;解决疑问&quot;">​</a></h4><ul><li><p>token的头部和有效载荷通过base64加密安全吗？</p><p>答：正因为如此，不能在有效载荷中放入涉及安全的信息如密码</p></li><li><p>有效载荷被篡改了怎么办？</p><p>答：由服务器产生，由服务器校验，即使token在第二次请求的时候被拦截，然后对里面的有效载荷进行篡改，在进行校验的时候，会比对签名串信息，若将头部和有效载荷以及密钥进行加密后与签名串不能匹配则表示被篡改</p></li></ul><h4 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h4><ul><li>依赖</li></ul><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.auth0&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;java-jwt&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;3.18.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.auth0&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;java-jwt&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;3.18.2&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><ul><li>实现类</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String SecretKey </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;5oiR5piv5aSn5biF5ZOl&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String token </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">creatToken</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">analysisToken</span><span style="color:#E1E4E8;">(token);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//生成jwt</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">creatToken</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;alg&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;HS256&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;typ&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;JWT&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    LocalDateTime nowLocalDateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LocalDateTime.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//获取当前时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    Date nowDate </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Date.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(nowLocalDateTime.</span><span style="color:#B392F0;">atZone</span><span style="color:#E1E4E8;">(ZoneId.</span><span style="color:#B392F0;">systemDefault</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">toInstant</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//获取到期时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    LocalDateTime expireLocalDateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> nowLocalDateTime.</span><span style="color:#B392F0;">plusMinutes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Date expireDate </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Date.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(expireLocalDateTime.</span><span style="color:#B392F0;">atZone</span><span style="color:#E1E4E8;">(ZoneId.</span><span style="color:#B392F0;">systemDefault</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">toInstant</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//根据用户名和密码生成token</span></span>
<span class="line"><span style="color:#E1E4E8;">    String token </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> JWT.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withHeader</span><span style="color:#E1E4E8;">(map)  </span><span style="color:#6A737D;">//传入头数据</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withSubject</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//传入自定义的键值对</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withClaim</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;wp&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withClaim</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;account&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;13245678912&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withIssuedAt</span><span style="color:#E1E4E8;">(nowDate)              </span><span style="color:#6A737D;">//签名时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withExpiresAt</span><span style="color:#E1E4E8;">(expireDate)          </span><span style="color:#6A737D;">//过期时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//设置签名</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">sign</span><span style="color:#E1E4E8;">(Algorithm.</span><span style="color:#B392F0;">HMAC256</span><span style="color:#E1E4E8;">(SecretKey));   </span><span style="color:#6A737D;">//签名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(token);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> token;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//解析jwt</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">analysisToken</span><span style="color:#E1E4E8;">(String token){</span></span>
<span class="line"><span style="color:#E1E4E8;">    JWTVerifier verifier </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> JWT.</span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(Algorithm.</span><span style="color:#B392F0;">HMAC256</span><span style="color:#E1E4E8;">(SecretKey)).</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//判断签名是否有效</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        DecodedJWT jwt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> verifier.</span><span style="color:#B392F0;">verify</span><span style="color:#E1E4E8;">(token);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (SignatureVerificationException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;签名校验失败&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    DecodedJWT decodedJWT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> JWT.</span><span style="color:#B392F0;">decode</span><span style="color:#E1E4E8;">(token);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//解析token</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Claim</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> decodedJWT.</span><span style="color:#B392F0;">getClaims</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Iterator&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Claim</span><span style="color:#E1E4E8;">&gt;&gt; it</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">map.</span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(it.</span><span style="color:#B392F0;">hasNext</span><span style="color:#E1E4E8;">()){</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map.Entry&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Claim</span><span style="color:#E1E4E8;">&gt; entry</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;key:&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">entry.</span><span style="color:#B392F0;">getKey</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot; &quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;Value:&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">entry.</span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String SecretKey </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;5oiR5piv5aSn5biF5ZOl&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) {</span></span>
<span class="line"><span style="color:#24292E;">    String token </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">creatToken</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">analysisToken</span><span style="color:#24292E;">(token);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//生成jwt</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">creatToken</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;alg&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;HS256&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;typ&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;JWT&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    LocalDateTime nowLocalDateTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//获取当前时间</span></span>
<span class="line"><span style="color:#24292E;">    Date nowDate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Date.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(nowLocalDateTime.</span><span style="color:#6F42C1;">atZone</span><span style="color:#24292E;">(ZoneId.</span><span style="color:#6F42C1;">systemDefault</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">toInstant</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//获取到期时间</span></span>
<span class="line"><span style="color:#24292E;">    LocalDateTime expireLocalDateTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> nowLocalDateTime.</span><span style="color:#6F42C1;">plusMinutes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    Date expireDate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Date.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(expireLocalDateTime.</span><span style="color:#6F42C1;">atZone</span><span style="color:#24292E;">(ZoneId.</span><span style="color:#6F42C1;">systemDefault</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">toInstant</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//根据用户名和密码生成token</span></span>
<span class="line"><span style="color:#24292E;">    String token </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> JWT.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withHeader</span><span style="color:#24292E;">(map)  </span><span style="color:#6A737D;">//传入头数据</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withSubject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//传入自定义的键值对</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withClaim</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;wp&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withClaim</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;account&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;13245678912&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withIssuedAt</span><span style="color:#24292E;">(nowDate)              </span><span style="color:#6A737D;">//签名时间</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withExpiresAt</span><span style="color:#24292E;">(expireDate)          </span><span style="color:#6A737D;">//过期时间</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//设置签名</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">sign</span><span style="color:#24292E;">(Algorithm.</span><span style="color:#6F42C1;">HMAC256</span><span style="color:#24292E;">(SecretKey));   </span><span style="color:#6A737D;">//签名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(token);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> token;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//解析jwt</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">analysisToken</span><span style="color:#24292E;">(String token){</span></span>
<span class="line"><span style="color:#24292E;">    JWTVerifier verifier </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> JWT.</span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(Algorithm.</span><span style="color:#6F42C1;">HMAC256</span><span style="color:#24292E;">(SecretKey)).</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//判断签名是否有效</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        DecodedJWT jwt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> verifier.</span><span style="color:#6F42C1;">verify</span><span style="color:#24292E;">(token);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (SignatureVerificationException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;签名校验失败&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    DecodedJWT decodedJWT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> JWT.</span><span style="color:#6F42C1;">decode</span><span style="color:#24292E;">(token);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//解析token</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Claim</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> decodedJWT.</span><span style="color:#6F42C1;">getClaims</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    Iterator&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Claim</span><span style="color:#24292E;">&gt;&gt; it</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">map.</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">()){</span></span>
<span class="line"><span style="color:#24292E;">        Map.Entry&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Claim</span><span style="color:#24292E;">&gt; entry</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;key:&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">entry.</span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot; &quot;</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;Value:&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">entry.</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,13),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{D as __pageData,d as default};
